version: "3.7"

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}
  local_rocket_mongodb_data: { driver: local }
  local_waautomate_data: {}
  local_wppconnect_data: {}
  local_wppconnect_tokens: {}
  local_codechat_data: {}
  local_prometeus_data: {}
  nodemodules: {}

services:

  django:
    &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: rocket_connect_local_django
    container_name: django
    depends_on:
      - postgres
      - mailhog
      - redis
      - celeryworker
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
      #- ./.env
    ports:
      - "8000:8000"
    healthcheck:
      test: curl --fail http://localhost:8000
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
       default:
          aliases:
            - django.local

    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: rocket_connect_production_postgres
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
      - local_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.local/.postgres

  docs:
    image: rocket_connect_local_docs
    container_name: docs
    build:
      context: .
      dockerfile: ./compose/local/docs/Dockerfile
    env_file:
      - ./.envs/.local/.django
    volumes:
      - ./docs:/docs:z
      - ./config:/app/config:z
      - ./rocket_connect:/app/rocket_connect:z
    ports:
      - "7000:7000"
    command: /start-docs

  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - "8025:8025"

  redis:
    image: redis:5.0
    container_name: redis

  celeryworker:
    <<: *django
    image: rocket_connect_local_celeryworker
    container_name: celeryworker
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    networks:
      - default
    healthcheck:
      disable: true
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: rocket_connect_local_celerybeat
    container_name: celerybeat
    depends_on:
      - redis
      - postgres
      - mailhog
    healthcheck:
      disable: true
    command: /start-celerybeat
    ports: []
    networks:
      - default

  flower:
    <<: *django
    image: rocket_connect_local_flower
    container_name: flower
    ports:
      - "5555:5555"
    healthcheck:
      test: curl --fail http://localhost:5555
      interval: 30s
      timeout: 10s
      retries: 3
    command: /start-flower
    networks:
      - default


  webdav:
    image: bytemark/webdav
    volumes:
      - /tmp/web:/var/lib/dav
    environment:
      - AUTH_TYPE=Basic
      - USERNAME=alice
      - PASSWORD=secret1234
      - LOCATION=/webdav
    ports:
      - 8011:80

  wppconnect:
    image: wppconnect/server-cli:main
    # for command options: https://github.com/wppconnect-team/server-cli/blob/main/src/program.js
    command: wppserver --startAllSession
    volumes:
      - local_wppconnect_data:/usr/src/server-cli/userDataDir
      - local_wppconnect_tokens:/usr/src/server-cli/tokens
    ports:
      - "21465:21465"

  # quepasa:
  #   image: sufficit/quepasa
  #   mem_limit: 4096M
  #   ports:
  #     - 31000:31000
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  #   restart: always
  #   stdin_open: true
  #   tty: true
  #   environment:
  #     - WEBSOCKETSSL=false
  #     - WEBAPIPORT=31000
  #     - APP_ENV=production
  #     - MIGRATIONS=/opt/quepasa/migrations
  #     - DEBUGJSONMESSAGES=false
  #     - HTTPLOGS=false


  apache:
    image: 'php:apache'
    ports:
      - "80:80"
    volumes:
      - ./compose/local/apache/site:/var/www/html
      - ./compose/local/apache/confs/additional.conf:/etc/apache2/conf-enabled/additional.conf
